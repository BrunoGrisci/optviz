</script>
<h3>Statistical Coloring</h3>

<p>One useful way to use coloring is to compute a statistic for each row, and color by that value. This plot is colored by <a href="http://en.wikipedia.org/wiki/Standard_score">Z-score</a> along the *weight* dimension.</p>


<p>Click a different axis label to color by Z-score for that dimension.</p>

<div id="example-zscore" class="parcoords"></div>

<!--
<ul id="zscore-colors">
  <li><input type="text" id="zscore-color0" value="green"/> - Positive Z-score</li>
  <li><input type="text" id="zscore-color1" value="grey"/> - Near-zero Z-score</li>
  <li><input type="text" id="zscore-color2" value="blue"/> - Negative Z-score</li>
</ul>
-->

<pre><a href="#" class="show-code" data-code="zscore">Show code</a></pre>
<script id="zscore">// this section uses underscore.js and underscore.math
var pcz;

// color scale for zscores
var zcolorscale = d3.scale.linear()
  .domain([-2,-0.5,0.5,2])
  .range(["brown", "#999", "#999", "steelblue"])
  .interpolate(d3.interpolateLab);

// load csv file and create the chart
d3.csv('examples/data/analysis.csv', function(data) {
  pcz = d3.parcoords()("#example-zscore")
    .data(data)
    //.hideAxis(["name"])
    .composite("darken")
    .render()
    .alpha(0.35)
    .brushMode("1D-axes")  // enable brushing
    .interactive()  // command line mode

  change_color("weight (lb)");

  // click label to activate coloring
  pcz.svg.selectAll(".dimension")
    .on("click", change_color)
    .selectAll(".label")
    .style("font-size", "14px");
});

// update color
function change_color(dimension) {
  pcz.svg.selectAll(".dimension")
    .style("font-weight", "normal")
    .filter(function(d) { return d == dimension; })
    .style("font-weight", "bold")

  pcz.color(zcolor(pcz.data(),dimension)).render()
}

// return color function based on plot and dimension
function zcolor(col, dimension) {
  var z = zscore(_(col).pluck(dimension).map(parseFloat).filter(function(value) { return !Number.isNaN(value) }))
  return function(d) { return zcolorscale(z(d[dimension])) }
};

// color by zscore
function zscore(col) {
  var n = col.length,
      mean = _(col).mean(),
      sigma = _(col).stdDeviation();
  return function(d) {
    return (d-mean)/sigma;
  };
};

</script>


